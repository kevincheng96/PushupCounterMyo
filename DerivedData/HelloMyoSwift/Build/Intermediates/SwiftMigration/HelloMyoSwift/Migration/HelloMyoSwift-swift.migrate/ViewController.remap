[
 {
  "file": "/Users/john/Desktop/HackIllinois2016/HelloMyoSwift/HelloMyoSwift/ViewController.swift",
  "offset": 2889,
  "remove": 3598,
  "text": "! Dictionary<NSString, TLMArmRecognizedEvent>\n    let armEvent = eventData[kTLMKeyArmRecognizedEvent]!\n    \n    var arm = armEvent.arm == .Right ? \"Right\" : \"Left\"\n    var direction = armEvent.xDirection == .TowardWrist ? \"Towards Wrist\" : \"Toward Elbow\"\n    armLabel.text = \"Arm: \\(arm) X-Direction: \\(direction)\"\n    helloLabel.textColor = UIColor.blueColor()\n    \n    armEvent.myo.vibrateWithLength(.Short)\n  }\n\n  func didLoseArm(notification: NSNotification) {\n    armLabel.text = \"Perform the Sync Gesture\"\n    helloLabel.text = \"Hello Myo\"\n    helloLabel.textColor = UIColor.blackColor()\n    \n    let eventData = notification.userInfo as! Dictionary<NSString, TLMArmLostEvent>\n    let armEvent = eventData[kTLMKeyArmLostEvent]!\n    armEvent.myo.vibrateWithLength(.Short)\n  }\n\n  func didRecieveOrientationEvent(notification: NSNotification) {\n    let eventData = notification.userInfo as! Dictionary<NSString, TLMOrientationEvent>\n    let orientationEvent = eventData[kTLMKeyOrientationEvent]!\n    \n    let angles = GLKitPolyfill.getOrientation(orientationEvent)\n    let pitch = CGFloat(angles.pitch.radians)\n    let yaw = CGFloat(angles.yaw.radians)\n    let roll = CGFloat(angles.roll.radians)\n    let rotationAndPerspectiveTransform:CATransform3D = CATransform3DConcat(CATransform3DConcat(CATransform3DRotate (CATransform3DIdentity, pitch, -1.0, 0.0, 0.0), CATransform3DRotate(CATransform3DIdentity, yaw, 0.0, 1.0, 0.0)), CATransform3DRotate(CATransform3DIdentity, roll, 0.0, 0.0, -1.0))\n    \n    // Apply the rotation and perspective transform to helloLabel.\n    helloLabel.layer.transform = rotationAndPerspectiveTransform\n  }\n\n  func didRecieveAccelerationEvent(notification: NSNotification) {\n    let eventData = notification.userInfo as! Dictionary<NSString, TLMAccelerometerEvent>\n    let accelerometerEvent = eventData[kTLMKeyAccelerometerEvent]!\n\n    let acceleration = GLKitPolyfill.getAcceleration(accelerometerEvent);\n    accelerationProgressBar.progress = acceleration.magnitude / 4.0;\n\n    // Uncomment to show direction of acceleration\n    //    let x = acceleration.x\n    //    let y = acceleration.y\n    //    let z = acceleration.z\n    //    accelerationLabel.text = \"Acceleration (\\(x), \\(y), \\(z))\"\n  }\n\n  func didChangePose(notification: NSNotification) {\n    let eventData = notification.userInfo as! Dictionary<NSString, TLMPose>\n    currentPose = eventData[kTLMKeyPose]!\n    \n    switch (currentPose.type) {\n    case .Fist:\n      helloLabel.text = \"Fist\"\n      helloLabel.font = UIFont(name: \"Noteworthy\", size: 50)\n      helloLabel.textColor = UIColor.greenColor()\n    case .WaveIn:\n      helloLabel.text = \"Wave In\"\n      helloLabel.font = UIFont(name: \"Courier New\", size: 50)\n      helloLabel.textColor = UIColor.greenColor()\n    case .WaveOut:\n      helloLabel.text = \"Wave Out\";\n      helloLabel.font = UIFont(name: \"Snell Roundhand\", size: 50)\n      helloLabel.textColor = UIColor.greenColor()\n    case .FingersSpread:\n      helloLabel.text = \"Fingers Spread\";\n      helloLabel.font = UIFont(name: \"Chalkduster\", size: 50)\n      helloLabel.textColor = UIColor.greenColor()\n    case .ThumbToPinky:\n      self.helloLabel.text = \"Thumb to Pinky\";\n      self.helloLabel.font = UIFont(name: \"Georgia\", size: 50)\n      self.helloLabel.textColor = UIColor.greenColor()\n    default: // .Rest or .Unknown\n      helloLabel.text = \"Hello Myo\"\n      helloLabel.font = UIFont(name: \"Helvetica Neue\", size: 50)\n      helloLabel.textColor = UIColor.blackColor()\n    }\n  }\n\n  func didRecieveGyroScopeEvent(notification: NSNotification) {\n    let eventData = notification.userInfo as!",
 }
]
